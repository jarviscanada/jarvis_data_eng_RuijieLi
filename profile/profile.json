{
  "education": [
    {
      "awards_achievements": [
        "GPA: 3.26/4.0"
      ],
      "degree": "Bachelor of Engineering",
      "department": "Software Engineering",
      "duration": "2018-2023",
      "school_name": "Polytechnique Montreal"
    }
  ],
  "github_repo_root_url": "https://github.com/jarviscanada/jarvis_data_eng_RuijieLi",
  "highlighted_projects": [
    {
      "description": "The goal of this project was to make a graphical user interface for a public transit simulator. In addition to drawing the deployment and package diagrams, I worked on the following features: displaying the events generated by the backend while a simulation is running, connecting the frontend and the backend with a message queue (ActiveMQ running in Docker), and pause/continue/stop simulation.",
      "git_url": null,
      "name": "UI for a transit simulator"
    },
    {
      "description": "The goal of this project was to make a cross-platform drawing app. I made a chatting feature on Android that allows users to send messages in different channels (some channels are public, others are only for people drawing on the same picture). I also made parts of the user profile. The Android app was written in Kotlin and Firebase was used as a database.",
      "git_url": null,
      "name": "Cross-platform drawing app"
    },
    {
      "description": "This project consisted of making a web version of Microsoft Paint in Angular/TypeScript. I implemented the following drawing tools: straight line, polygon, bucket fill (left-click to color connected pixels, right-click to color all pixels on image), a part of free from selection, and aerosol. I also implemented undo/redo with the design pattern \"Command\", as well as unit tests with Jasmine",
      "git_url": null,
      "name": "Browser drawing app"
    },
    {
      "description": "This project aimed at programming a robot that can complete an obstacle course (e.g. following a black line and avoiding walls) and was done as part of a class. I worked on measuring distance with sonars, CTC, and implementing object-oriented programming to the classes representing the LEDs. There were also features such as debouncing buttons and interrupts that everyone had to implement as part of the class.",
      "git_url": "https://github.com/atarixGB/INF1900-H20-projet",
      "name": "Embedded programming"
    },
    {
      "description": "This project consists of a competition where each team has to make robots (each robot has armor plates with a number on it, and LEDs indicating whether it's on the red team or the blue team). The goal is to have our robots shoot the other team's robots. I wrote a program to split 1920x1080 images into 1080x720 images based on XML data, annotated 200 pictures for the machine learning algorithm, and wrote a program to detect the color of an LED in a picture (return gray if it is off, return red or blue if it is on).",
      "git_url": null,
      "name": "PolyStar computer vision team."
    }
  ],
  "jarvis_projects": [
    {
      "description": "The project consists of a Linux Bash script that monitors the resource usage of Rocky Linux virtual machines on Google Cloud. The scripts are triggered by crontab and send the information to a Postgresql database that runs in a Docker container.",
      "git_url": "/linux_sql",
      "name": "Linux Cluster Resource Monitoring App"
    },
    {
      "description": "This project is mainly for learning SQL, with statements like SELECT, UPDATE, DELETE, INSERT, various types of JOIN operations, etc. PostgreSQL was used to run the database, and PGAdmin was used to run the commands.",
      "git_url": "/sql",
      "name": "RDBSM and SQL"
    },
    {
      "description": [
        "JDBC App: WIP",
        "Grep App: This app takes a regular expression, and recursively searches all files in a given folder before writing the results in an output file. It is written in Java 8, with Maven as a package manager. To use this app, use the command `java -jar path/to/app.jar REGEX PATH/TO/FOLDER PATH/TO/OUTPUT/FILE MAX_FILE_SIZE_WITHOUT_BUFFER` where `REGEX` is a regular expression, `PATH/TO/FOLDER` is a folder that should be searched recursively, `PATH/TO/OUTPUT/FILE` is where all the matched lines will be written, and `MAX_FILE_SIZE_WITHOUT_BUFFER` is the maximum size of a file that can be processed without an input buffer. It can also be used with `sudo docker run --rm -v path/to/data:/data -v path/to/log:/log  ruijie99/grep:latest REGEX PATH/TO/FOLDER PATH/TO/OUTPUT/FILE MAX_FILE_SIZE_WITHOUT_BUFFER`, however, this is not ideal since it requires the creation of a data folder and a log folder, plus Docker isn't made to access the host file system, which makes it harder to search local files."
      ],
      "git_url": "/core_java",
      "name": "Core Java Apps"
    }
  ],
  "name": "Rui Jie Li",
  "others": [
    {
      "bullets": [
        "I like playing basketball and badminton, just for fun",
        "For someone who just improvises with leftover and cheap ingredients, I'm pretty good at cooking (found out that Cheetos can melt in hot water and serve as spaghetti sauce thickener because me and my roommate didn't have flour)"
      ],
      "title": "Activities/Hobbies"
    }
  ],
  "professional_experience": [
    {
      "company": "Jarvis Consulting Group",
      "description": "Training in various enterprise technologies such as SQL, Linux Bash, Maven, JDBC, and Java. So far, I have completed a resource monitoring app in Linux Bash, a SQL exercise project, and a Java regex matching app. Currently, I am working on a Java stock app to practice interacting with a database in Java (DAO, DTO, unit testing).",
      "duration": "2024-present",
      "title": "Junior Software Developer"
    },
    {
      "company": "Ethos Metrics",
      "description": "So far, I've completed a project on data migration from various formats (mostly Word and Excel) to Salesforce, using regex in Python and Excel to generate the import document. Currently, I am working on two projects: a document classification script with models on Hugging Face, and SEO optimization for their website (https://www.ethosmetrics.ca/)",
      "duration": "2024-present",
      "title": "Data Analyst (contract part time)"
    },
    {
      "company": "Fondation de Polytechnique",
      "description": "I implemented responsive design and improved the UI (fixing display and scrolling issues and adding CSS transitions) of multiple web pages. Since most of the front end was automatically generated with NetCommunity and I cannot modify the generated code, I've often had to come up with workarounds. I also made a tax credit estimation tool for the 2024 campaign (for example https://soutien.polymtl.ca/campagne-annuelle-2024-25/jd/don-unique) and partially automated some data entry tasks.",
      "duration": "2023-2024",
      "title": "Data Analyst"
    },
    {
      "company": "Fondation de Polytechnique",
      "description": "I was mostly working with Blackbaud products. I maintained and edited some web pages, partially automated some data entry tasks, and made a telemarketing tool that was used for a few months after Blackbaud removed theirs.",
      "duration": "2021-2023",
      "title": "Data management assistant"
    },
    {
      "company": "Polytechnique Montreal",
      "description": "I made a telecommunication simulator run up to 65% faster and use up to a bit less than 50% less memory, depending on the simulation configuration. The result was achieved by adding/optimizing multiprocessing, using the __slots__ attribute, and reducing function calls (especially SciPy.rvs). I also attempted further optimizations with shared memory (BaseManager) and Boost.Python (translating part of the code to C++), however they were unsuccessful due to high overhead.",
      "duration": "2020",
      "title": "Backend development intern"
    }
  ],
  "skills": {
    "competent": [
      "Linux/Bash",
      "RDBMS/SQL",
      "Agile/Scrum",
      "Java",
      "C",
      "Docker"
    ],
    "familiar": [
      "Android",
      "AWS",
      "Machine learning",
      "Linux OS",
      "Unit testing",
      "Kotlin",
      "Message queue",
      "Makefile",
      "Boost.Python",
      "VBA"
    ],
    "proficient": [
      "Python",
      "C++",
      "HTML",
      "JavaScript",
      "TypeScript",
      "Angular",
      "CSS",
      "Git"
    ]
  },
  "summary": " As someone who enjoys problem-solving and technical challenges, I look forward to contributing to your organization! I have a year of work experience in frontend and backend software development and a bachelor's degree in software engineering from Polytechnique Montr√©al. I have worked with JavaScript, TypeScript, Python, Java, and C++, on projects such as a telecommunication simulator, embedded C++, a drawing app, and computer vision for robots. I am also working at a tech consultancy, aside from training at Jarvis. In my free time, I sometimes go play badminton or basketball (not on a professional level, just for fun), and I enjoy cooking."
}
